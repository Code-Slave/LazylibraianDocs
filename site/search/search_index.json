{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LazyLibrarian Introduction LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. License: GNU GPL v3 Right now it's capable of the following: Import an existing calibre library (optional) Find authors and add them to the database List all books of an author and mark ebooks or audiobooks as 'wanted'. LazyLibrarian will search for a nzb-file or a torrent or magnet link for that book If a nzb/torrent/magnet is found it will be sent to a download client or saved in a black hole where your download client can pick it up. Currently supported download clients for usenet are : * sabnzbd (versions later than 0.7.x preferred) * nzbget * synology_downloadstation Currently supported download clients for torrent and magnets are: * deluge * transmission * utorrent * qbittorrent * rtorrent * synology_downloadstation When processing the downloaded books it will save a cover picture (if available) and save all metadata into metadata.opf next to the bookfile (calibre compatible format) The new theme for the site allows it to be accessed (and usable) from devices with a smaller screen (such as an iPad) AutoAdd feature for book management tools like Calibre which must have books in flattened directory structure, or use calibre to import your books into an existing calibre library LazyLibrarian can also be used to search for and download magazines, and monitor for new issues Offers opds interface for ebook clients to browse and download books. Screenshots","title":"Intro"},{"location":"#lazylibrarian","text":"","title":"LazyLibrarian"},{"location":"#introduction","text":"LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. License: GNU GPL v3 Right now it's capable of the following: Import an existing calibre library (optional) Find authors and add them to the database List all books of an author and mark ebooks or audiobooks as 'wanted'. LazyLibrarian will search for a nzb-file or a torrent or magnet link for that book If a nzb/torrent/magnet is found it will be sent to a download client or saved in a black hole where your download client can pick it up. Currently supported download clients for usenet are : * sabnzbd (versions later than 0.7.x preferred) * nzbget * synology_downloadstation Currently supported download clients for torrent and magnets are: * deluge * transmission * utorrent * qbittorrent * rtorrent * synology_downloadstation When processing the downloaded books it will save a cover picture (if available) and save all metadata into metadata.opf next to the bookfile (calibre compatible format) The new theme for the site allows it to be accessed (and usable) from devices with a smaller screen (such as an iPad) AutoAdd feature for book management tools like Calibre which must have books in flattened directory structure, or use calibre to import your books into an existing calibre library LazyLibrarian can also be used to search for and download magazines, and monitor for new issues Offers opds interface for ebook clients to browse and download books.","title":"Introduction"},{"location":"#screenshots","text":"","title":"Screenshots"},{"location":"api/","text":"API Lazylibrarian now has a basic api. To use it... http://host:port/api?apikey=your_api_key cmd=help This will list all available commands and any extra parameters required. Simple commands just return OK, more complex commands return results as JSON so you probably want to use json.loads() to read the results. Time consuming commands such as library scanning and updating active authors return OK straight away, and then run in the background as a separate thread. If you need to know when they have completed, monitor the log, or use the optional wait parameter. Some proxy servers will timeout if the wait is too long. Parameters passed to the api should be in urllib.quote_plus style, eg name=Tom+Holt, not name=\"Tom Holt\" or name=Tom%20Holt and be aware that Goodreads is very fussy about initials, and returns strange/irrelevant/random results if you don't get it right. It doesn't like initials followed by spaces, examples below are quote_plus encoded... eg \"J+R+R+Tolkien\" fails, it needs to be \"J.+R.+R.+Tolkien\" or \"J.R.R.Tolkien\" or just \"Tolkien\" but it DOES need spaces if not initials eg \"Tom.Holt\" fails, but \"Tom+Holt\" works Also if there are any functions you might like that aren't implemented, post a message on the issues page and I'll see what I can do.","title":"API"},{"location":"api/#api","text":"Lazylibrarian now has a basic api. To use it... http://host:port/api?apikey=your_api_key cmd=help This will list all available commands and any extra parameters required. Simple commands just return OK, more complex commands return results as JSON so you probably want to use json.loads() to read the results. Time consuming commands such as library scanning and updating active authors return OK straight away, and then run in the background as a separate thread. If you need to know when they have completed, monitor the log, or use the optional wait parameter. Some proxy servers will timeout if the wait is too long. Parameters passed to the api should be in urllib.quote_plus style, eg name=Tom+Holt, not name=\"Tom Holt\" or name=Tom%20Holt and be aware that Goodreads is very fussy about initials, and returns strange/irrelevant/random results if you don't get it right. It doesn't like initials followed by spaces, examples below are quote_plus encoded... eg \"J+R+R+Tolkien\" fails, it needs to be \"J.+R.+R.+Tolkien\" or \"J.R.R.Tolkien\" or just \"Tolkien\" but it DOES need spaces if not initials eg \"Tom.Holt\" fails, but \"Tom+Holt\" works Also if there are any functions you might like that aren't implemented, post a message on the issues page and I'll see what I can do.","title":"API"},{"location":"audiobooks/","text":"This is the same as the eBooks page, with the same options Menu The menu bar has four buttons [Search] searches your download providers for all audiobooks marked \"Wanted\". You can configure a task to do this at regular intervals in config. [Run PostProcessor] adds any audiobooks in your download directory to your library. You can also configure a task to do this at regular intervals in config. [LibraryScan] will search your library (AudioBook Library Folder, defined in config) and add all the books it can find into your lazylibrarian database. [Recent AudioBooks] shows a \"wall\" of cover images from the books in your library, most recently added first. Clicking on a cover image in the wall will open the first part of the audiobook. [RSS] RSS feed of recent downloads. To the right of the buttons you might see a language selector This only appears if there are results in more than one language. Note that this is goodreads/googlebooks idea of the books language, not the actual language of any audio files. Below this on the left is to change the status of audiobooks. Status [Wanted] Mark selected book(s) as wanted and LazyLibrarian will search for them [Have] Mark book(s) selected as have and LazyLibrarian will NOT search. [Ignored] Ignore book(s) from searches and hide from main window. [Skip] Skip searching for selected book(s). [Removed] remove book(s) from LazyLibrarian database. Does not delete local files.For books, if the author is active, this is changed to Ignored [Delete] delete book(s) from database and deletes local files as well. After this are toggles, rows per page and results filter as described in the homepage. In the table, clicking on the book cover image shows a larger image. Clicking the author name takes you to the authors page. Under the book title are buttons eg GoodReads LibraryThing Manual (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. See Pages: Manual . The Status column shows the current status of the book in the library. [Open] and [Search] are clickable buttons, the other statuses are just for information.","title":"AudioBooks"},{"location":"audiobooks/#menu","text":"The menu bar has four buttons [Search] searches your download providers for all audiobooks marked \"Wanted\". You can configure a task to do this at regular intervals in config. [Run PostProcessor] adds any audiobooks in your download directory to your library. You can also configure a task to do this at regular intervals in config. [LibraryScan] will search your library (AudioBook Library Folder, defined in config) and add all the books it can find into your lazylibrarian database. [Recent AudioBooks] shows a \"wall\" of cover images from the books in your library, most recently added first. Clicking on a cover image in the wall will open the first part of the audiobook. [RSS] RSS feed of recent downloads. To the right of the buttons you might see a language selector This only appears if there are results in more than one language. Note that this is goodreads/googlebooks idea of the books language, not the actual language of any audio files. Below this on the left is to change the status of audiobooks.","title":"Menu"},{"location":"audiobooks/#status","text":"[Wanted] Mark selected book(s) as wanted and LazyLibrarian will search for them [Have] Mark book(s) selected as have and LazyLibrarian will NOT search. [Ignored] Ignore book(s) from searches and hide from main window. [Skip] Skip searching for selected book(s). [Removed] remove book(s) from LazyLibrarian database. Does not delete local files.For books, if the author is active, this is changed to Ignored [Delete] delete book(s) from database and deletes local files as well. After this are toggles, rows per page and results filter as described in the homepage. In the table, clicking on the book cover image shows a larger image. Clicking the author name takes you to the authors page. Under the book title are buttons eg GoodReads LibraryThing Manual (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. See Pages: Manual . The Status column shows the current status of the book in the library. [Open] and [Search] are clickable buttons, the other statuses are just for information.","title":"Status"},{"location":"authors/","text":"The table itself should be fairly self explanatory, follows the same layout and description as earlier pages. The menu bar has a lot more buttons though. Menubar [Refresh Author] reloads the author details and booklist from Goodreads/GoogleBooks similar to the \"Refresh Active Authors\" option on the homepage, but it just does it for the one author, not the whole library. [eBook Scan] and [AudioBook Scan] are similar to the options on the eBook and AudioBook pages, they run libraryscan, but only on the one author. [Remove Author] removes the author and all their books from the lazylibrarian database. It does not delete any book files, just the database entries. [Pause Author] and [Resume Author] are used to control whether the authors booklist should be updated periodically [Ignore Author] stops the author appearing in lazylibrarian webpages. Useful if you have a book by them, but don't want any more [Ignored books] shows books by this author marked as ignored. You might want to ignore books that have been incorrectly attributed to this author, or if the author has written a book or series you want, plus other books on unrelated subjects you aren't interested in and don't want to show in their author page. To the right there may be one or two select boxes [Library] switches between displaying the authors eBooks and AudioBooks and [Language] selects books tagged in different languages. Note that for AudioBooks this is goodreads/googlebooks idea of language, not the actual language of any audio files. Author Details In the author details above the table there is a photo, the author name, and an [Edit] button. Clicking the author name takes you to their page on GoodReads. Clicking [Edit] takes you to a page where you can edit some of the author details, and upload a new author image. Author SubMenu [Mark Selected as] [Wanted] Mark selected book(s) as wanted and LazyLibrarian will search for them [Have] Mark book(s) selected as have and LazyLibrarian will NOT search. [Ignored] Ignore book(s) from searches and hide from main window. [Skip] Skip searching for selected book(s). [Removed] remove book(s) from LazyLibrarian database. Does not delete local files.For books, if the author is active, this is changed to Ignored [Delete] delete book(s) from database and deletes local files as well. [Unread] Mark book(s) as unread in the database [Read] mark book(s) as read in the database and show a bookmark [ToRead] Mark book(s) as to be read and show a bookmark","title":"Author Detail"},{"location":"authors/#menubar","text":"[Refresh Author] reloads the author details and booklist from Goodreads/GoogleBooks similar to the \"Refresh Active Authors\" option on the homepage, but it just does it for the one author, not the whole library. [eBook Scan] and [AudioBook Scan] are similar to the options on the eBook and AudioBook pages, they run libraryscan, but only on the one author. [Remove Author] removes the author and all their books from the lazylibrarian database. It does not delete any book files, just the database entries. [Pause Author] and [Resume Author] are used to control whether the authors booklist should be updated periodically [Ignore Author] stops the author appearing in lazylibrarian webpages. Useful if you have a book by them, but don't want any more [Ignored books] shows books by this author marked as ignored. You might want to ignore books that have been incorrectly attributed to this author, or if the author has written a book or series you want, plus other books on unrelated subjects you aren't interested in and don't want to show in their author page. To the right there may be one or two select boxes [Library] switches between displaying the authors eBooks and AudioBooks and [Language] selects books tagged in different languages. Note that for AudioBooks this is goodreads/googlebooks idea of language, not the actual language of any audio files.","title":"Menubar"},{"location":"authors/#author-details","text":"In the author details above the table there is a photo, the author name, and an [Edit] button. Clicking the author name takes you to their page on GoodReads. Clicking [Edit] takes you to a page where you can edit some of the author details, and upload a new author image.","title":"Author Details"},{"location":"authors/#author-submenu","text":"[Mark Selected as] [Wanted] Mark selected book(s) as wanted and LazyLibrarian will search for them [Have] Mark book(s) selected as have and LazyLibrarian will NOT search. [Ignored] Ignore book(s) from searches and hide from main window. [Skip] Skip searching for selected book(s). [Removed] remove book(s) from LazyLibrarian database. Does not delete local files.For books, if the author is active, this is changed to Ignored [Delete] delete book(s) from database and deletes local files as well. [Unread] Mark book(s) as unread in the database [Read] mark book(s) as read in the database and show a bookmark [ToRead] Mark book(s) as to be read and show a bookmark","title":"Author SubMenu"},{"location":"config_categories/","text":"You only need to change the settings on this page if auto-detection fails or returns incorrect values. If you make any alterations, tick the lock button to prevent reloading values from the provider. Settings are reloaded according to the main cache expiry setting, or whenever the provider host name changes. To force a reload, edit the provider host name, save, then put the provider host name back. On next book search the values will be reloaded from the provider. Many sites do not correctly report their capabilities to us. Most newznab sites support book search but don't say so, but we try anyway. Most nzedb servers do not support book search, so we don't try on those. If you get a message in the logs saying \"unknown parameter\" or \"incorrect parameter\" or \"unknown function\" it's probably because that provider can't do a book search so edit this field and leave it blank. Do not blank the category numbers for books or magazines as these are also used in some general searches. There is no specific magazine search in either type of provider yet, so leave this blank for now. For each provider Tick box to lock settings - prevents reloading on cache expiry time General search - normally just \"search\" Extended search - normally \"1\" Book search - normally \"book\" on newznab, sometimes \"books\" on nzedb, most nzedb leave blank as no specific book search on these providers. Magazine search - normally blank, no specific magazine search available yet Book categories - varies from provider to provider, 7000 range for newznab, 8000 range for nzedb Magazine categories - varies, usually a sub-category of books","title":"Categories"},{"location":"config_categories/#for-each-provider","text":"Tick box to lock settings - prevents reloading on cache expiry time General search - normally just \"search\" Extended search - normally \"1\" Book search - normally \"book\" on newznab, sometimes \"books\" on nzedb, most nzedb leave blank as no specific book search on these providers. Magazine search - normally blank, no specific magazine search available yet Book categories - varies from provider to provider, 7000 range for newznab, 8000 range for nzedb Magazine categories - varies, usually a sub-category of books","title":"For each provider"},{"location":"config_downloaders/","text":"All downloaders have a \"test\" button that does a basic connection test to make sure the settings are correct. Usenet Use SABnzbd+ If this is ticked the following options become available Host If your sabnzbd is running on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the sabnzbd machine Port Port sabnzbd is listening on Username Login details for sabnzbd Password Category Tell sabnzbd to save the books/magazines under this category SubDir Path to sabnzbd if needed, eg if sabnzbd is host:port/subdir, put the subdir part here. Leave blank if sabnzbd is just at host:port * Retention Max Age Ignore nzb results older than this Use NZBGet If this is ticked the following options become available Host If nzbget is running on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the nzbget machine Port Port NZBGet is listening on Username Login details for nzbget Password Category Tell NZBGet to save the books/magazines under this category Priority NZBGet download priority Use Synology DownloadStation If this is ticked the following options become available Host If lazylibrarian is running on the synology NAS, put localhost Otherwise put the ip address of the NAS here Port Synology defaults are 5000 for http, 5001 for https Username Login details for the synology NAS Password Directory Usually Multimedia/Download Use DownloadStation for usenet You can choose to use DownloadStation for usenet, or torrents/magnets, or both * Use DownloadStation for torrents Use for torrents (and magnets) Use NZB BlackHole If your nzb downloader monitors a directory for nzb files, tick this * NZB Blackhole Directory This is the directory your downloader should look in, LazyLibrarian will put nzb files in here to be collected. Torrents Use Deluge Tick this if you use deluge to download torrents. There are two methods of talking to deluge, via the daemon, or via the webui. If you provide a username and password LazyLibrarian will use the daemon, if you just provide a password and leave username blank then LazyLibrarian will use the webui. Host If deluge is on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the nzbget machine Port Port that deluge is listening on Username Only used for deluge daemon Password Needed for both daemon and webui Use Transmission Tick this to use Transmission to download torrents Host Address of the transmission daemon. If transmission is on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the transmission_daemon Port Port transmission is listening on Username Login details for transmission Password Use uTorrent Tick this to use uTorrent to download torrents Host URL of the uTorrent downloader Port Port uTorrent is listening on Username Login details for uTorrent Password * Label Save books/magazines with this label Use qBitTorrent Tick this to use qBitTorrent to download torrents Host URL of the qBitTorrent downloader Port Port qBitTorrent is listening on Username Login details for qBitTorrent Password * Label Save books/magazines with this label Use rTorrent Tick this to use rTorrent to download torrents. NOTE: rTorrent does not work well with magnet links, so we try to convert them to torrent files using libtorrent. See notes in the \"blackhole\" section earlier in this wiki. Host URL of the rTorrent downloader See separate page in this wiki for further details Username Login details for rTorrent Password Label Save books/magazines with this label * Directory Save books/magazines to this directory, or leave blank to use rTorrent defaults Use Torrent Blackhole If your torrent downloader monitors a directory for torrent files, tick this Torrent Blackhole Directory This is the directory your downloader should look in, LazyLibrarian will put torrent files in here to be collected. Convert magnet links to torrent files This needs an external library \"libtorrent\" which is not supplied with LazyLibrarian as it is architecture specific. If you don't have the library installed, LazyLibrarian will ignore the request to convert. Libtorrent is available in most linux distributions, MacOS, Windows, but is not installed by default on some NAS systems. See http://www.libtorrent.org/ for details on building libtorrent. Minimum Seeders Reject torrents if less than this number of seeders Keep seeding What to do after processing the downloaded book/mag If ticked, do nothing, keep seeding the files If unticked, ask the downloader to delete the torrent Directory LazyLibrarian expects the downloaders to put books/magazines here","title":"Downloaders"},{"location":"config_downloaders/#usenet","text":"","title":"Usenet"},{"location":"config_downloaders/#use-sabnzbd","text":"If this is ticked the following options become available Host If your sabnzbd is running on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the sabnzbd machine Port Port sabnzbd is listening on Username Login details for sabnzbd Password Category Tell sabnzbd to save the books/magazines under this category SubDir Path to sabnzbd if needed, eg if sabnzbd is host:port/subdir, put the subdir part here. Leave blank if sabnzbd is just at host:port * Retention Max Age Ignore nzb results older than this","title":"Use SABnzbd+"},{"location":"config_downloaders/#use-nzbget","text":"If this is ticked the following options become available Host If nzbget is running on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the nzbget machine Port Port NZBGet is listening on Username Login details for nzbget Password Category Tell NZBGet to save the books/magazines under this category Priority NZBGet download priority","title":"Use NZBGet"},{"location":"config_downloaders/#use-synology-downloadstation","text":"If this is ticked the following options become available Host If lazylibrarian is running on the synology NAS, put localhost Otherwise put the ip address of the NAS here Port Synology defaults are 5000 for http, 5001 for https Username Login details for the synology NAS Password Directory Usually Multimedia/Download Use DownloadStation for usenet You can choose to use DownloadStation for usenet, or torrents/magnets, or both * Use DownloadStation for torrents Use for torrents (and magnets)","title":"Use Synology DownloadStation"},{"location":"config_downloaders/#use-nzb-blackhole","text":"If your nzb downloader monitors a directory for nzb files, tick this * NZB Blackhole Directory This is the directory your downloader should look in, LazyLibrarian will put nzb files in here to be collected.","title":"Use NZB BlackHole"},{"location":"config_downloaders/#torrents","text":"","title":"Torrents"},{"location":"config_downloaders/#use-deluge","text":"Tick this if you use deluge to download torrents. There are two methods of talking to deluge, via the daemon, or via the webui. If you provide a username and password LazyLibrarian will use the daemon, if you just provide a password and leave username blank then LazyLibrarian will use the webui. Host If deluge is on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the nzbget machine Port Port that deluge is listening on Username Only used for deluge daemon Password Needed for both daemon and webui","title":"Use Deluge"},{"location":"config_downloaders/#use-transmission","text":"Tick this to use Transmission to download torrents Host Address of the transmission daemon. If transmission is on the same machine as lazylibrarian, put localhost Otherwise put the ip address of the transmission_daemon Port Port transmission is listening on Username Login details for transmission Password","title":"Use Transmission"},{"location":"config_downloaders/#use-utorrent","text":"Tick this to use uTorrent to download torrents Host URL of the uTorrent downloader Port Port uTorrent is listening on Username Login details for uTorrent Password * Label Save books/magazines with this label","title":"Use uTorrent"},{"location":"config_downloaders/#use-qbittorrent","text":"Tick this to use qBitTorrent to download torrents Host URL of the qBitTorrent downloader Port Port qBitTorrent is listening on Username Login details for qBitTorrent Password * Label Save books/magazines with this label","title":"Use qBitTorrent"},{"location":"config_downloaders/#use-rtorrent","text":"Tick this to use rTorrent to download torrents. NOTE: rTorrent does not work well with magnet links, so we try to convert them to torrent files using libtorrent. See notes in the \"blackhole\" section earlier in this wiki. Host URL of the rTorrent downloader See separate page in this wiki for further details Username Login details for rTorrent Password Label Save books/magazines with this label * Directory Save books/magazines to this directory, or leave blank to use rTorrent defaults","title":"Use rTorrent"},{"location":"config_downloaders/#use-torrent-blackhole","text":"If your torrent downloader monitors a directory for torrent files, tick this Torrent Blackhole Directory This is the directory your downloader should look in, LazyLibrarian will put torrent files in here to be collected. Convert magnet links to torrent files This needs an external library \"libtorrent\" which is not supplied with LazyLibrarian as it is architecture specific. If you don't have the library installed, LazyLibrarian will ignore the request to convert. Libtorrent is available in most linux distributions, MacOS, Windows, but is not installed by default on some NAS systems. See http://www.libtorrent.org/ for details on building libtorrent.","title":"Use Torrent Blackhole"},{"location":"config_downloaders/#minimum-seeders","text":"Reject torrents if less than this number of seeders","title":"Minimum Seeders"},{"location":"config_downloaders/#keep-seeding","text":"What to do after processing the downloaded book/mag If ticked, do nothing, keep seeding the files If unticked, ask the downloader to delete the torrent","title":"Keep seeding"},{"location":"config_downloaders/#directory","text":"LazyLibrarian expects the downloaders to put books/magazines here","title":"Directory"},{"location":"config_filters/","text":"Book Reject List Comma separated list of words to reject: Search results with any of these words in the title will be ignored Default: audiobook, mp3 When the downloaders return a list of results, you can filter out ones you don't want using this list. Works by looking for rejected words in the titles returned by the downloaders. Will not reject words that are in the title you asked for, or in the authors name. Magazine Reject List Global setting, similar to book reject list, applies to all magazines AudioBook Reject List as above Extension Reject List (all types) Results with any of these extensions anywhere in the contents will be rejected. Useful to stop badly named video files being grabbed when you want the book. We scan the list of files in the torrent (only transmission/deluge/qbittorrent) and reject the whole download if it contains a file with a matching extension. Can't do this for usenet, as there doesn't seem to be a nzb contents list? Size Limits You can restrict downloads by minimum/maximum size (where available). Ebooks are generally way smaller than audiobooks, which helps limit grabbing the wrong type. Magazine Reject Lists (per title) Reject Words Each magazine has it's own reject list. Useful where magazine titles are subsets of another title, or where there are international variants of a magazine. Default is blank as most magazines don't need any filtering, just the name. Example 1: You want to download \"Edge\" The downloaders return... Edge TruePDF-July 2016 Pacific Edge-April June 2016 Living Edge TruePDF-May 2016 In the reject list for Edge you would put Pacific, Living to prevent these being grabbed Example 2: You want to download GQ The downloaders return... GQ May 2016 GQ India May 2016 GQ USA May 2016 British GQ May 2016 In the reject list you would put India, USA, British If you want to download GQ India, or GQ USA, just put that as the title, no reject list needed. If you know in advance which words you want to reject, you can pass them as part of the magazine name when you first add it on the \"Magazines\" page. Separate title and reject list by a tilde character. To add a new magazine including a reject list, for example 1 above you would put Edge ~ Pacific, Living into the box marked \"Magazine Title\" on the top right of the page, and hit the \"+ Magazine\" button. Search Expression In case you want to call the magazine \"UK BBC Radio Times\" in your database, but only search for \"Radio Times\" Date Style Can be useful for filtering out badly named torrents. You can specify which date components must be in the download filename. Normally just leave this blank and we auto-detect. Issue date components are M - must contain a month name or number D - must contain a day number MM - must contain two month names (bi-monthly issues) V - must contain a volume number - use I and V if you need both I - must contain issue number Y - must contain a year Import and Export filter buttons To save and load your magazine filter settings if you need to rebuild your database or move to another machine.","title":"Filters"},{"location":"config_filters/#book-reject-list","text":"Comma separated list of words to reject: Search results with any of these words in the title will be ignored Default: audiobook, mp3 When the downloaders return a list of results, you can filter out ones you don't want using this list. Works by looking for rejected words in the titles returned by the downloaders. Will not reject words that are in the title you asked for, or in the authors name.","title":"Book Reject List"},{"location":"config_filters/#magazine-reject-list","text":"Global setting, similar to book reject list, applies to all magazines","title":"Magazine Reject List"},{"location":"config_filters/#audiobook-reject-list","text":"as above","title":"AudioBook Reject List"},{"location":"config_filters/#extension-reject-list-all-types","text":"Results with any of these extensions anywhere in the contents will be rejected. Useful to stop badly named video files being grabbed when you want the book. We scan the list of files in the torrent (only transmission/deluge/qbittorrent) and reject the whole download if it contains a file with a matching extension. Can't do this for usenet, as there doesn't seem to be a nzb contents list?","title":"Extension Reject List (all types)"},{"location":"config_filters/#size-limits","text":"You can restrict downloads by minimum/maximum size (where available). Ebooks are generally way smaller than audiobooks, which helps limit grabbing the wrong type.","title":"Size Limits"},{"location":"config_filters/#magazine-reject-lists-per-title","text":"","title":"Magazine Reject Lists (per title)"},{"location":"config_filters/#reject-words","text":"Each magazine has it's own reject list. Useful where magazine titles are subsets of another title, or where there are international variants of a magazine. Default is blank as most magazines don't need any filtering, just the name. Example 1: You want to download \"Edge\" The downloaders return... Edge TruePDF-July 2016 Pacific Edge-April June 2016 Living Edge TruePDF-May 2016 In the reject list for Edge you would put Pacific, Living to prevent these being grabbed Example 2: You want to download GQ The downloaders return... GQ May 2016 GQ India May 2016 GQ USA May 2016 British GQ May 2016 In the reject list you would put India, USA, British If you want to download GQ India, or GQ USA, just put that as the title, no reject list needed. If you know in advance which words you want to reject, you can pass them as part of the magazine name when you first add it on the \"Magazines\" page. Separate title and reject list by a tilde character. To add a new magazine including a reject list, for example 1 above you would put Edge ~ Pacific, Living into the box marked \"Magazine Title\" on the top right of the page, and hit the \"+ Magazine\" button.","title":"Reject Words"},{"location":"config_filters/#search-expression","text":"In case you want to call the magazine \"UK BBC Radio Times\" in your database, but only search for \"Radio Times\"","title":"Search Expression"},{"location":"config_filters/#date-style","text":"Can be useful for filtering out badly named torrents. You can specify which date components must be in the download filename. Normally just leave this blank and we auto-detect. Issue date components are M - must contain a month name or number D - must contain a day number MM - must contain two month names (bi-monthly issues) V - must contain a volume number - use I and V if you need both I - must contain issue number Y - must contain a year","title":"Date Style"},{"location":"config_filters/#import-and-export-filter-buttons","text":"To save and load your magazine filter settings if you need to rebuild your database or move to another machine.","title":"Import and Export filter buttons"},{"location":"config_importing/","text":"Book Search API Currently only supports GoodReads and GoogleBooks GoodReads API Access key for GoodReads GoodReads Sync LazyLibrarian is supplied with a default goodreads api key which is read-only, and gives access to search functions. If you want to sync your goodreads bookshelves with lazylibrarian you will need to get your own key and secret from https://www.goodreads.com/api/keys. Once you have your own key/secret enter them in lazylibrarian config and save the config. You can then obtain your goodreads oAuth token/secret to get write access to your goodreads account. You can select whether a book is allowed to be on both shelves. If using the default goodreads to-read/read shelves goodreads will override this and only allow the book on one shelf (you've either read it or you haven't) If using your own shelves they can be used as owned/read instead if you wish, so a book can be on both shelves. Press \"Request oAuth1\". A new goodreads window will open where you can confirm you want to give access to lazylibrarian. Once confirmed, press \"Request oAuth2\" to read and store the credentials in lazylibrarian config. You can now configure the bookshelves to use. You can use existing goodreads shelves or lazylibrarian can create new ones. Lazylibrarian supports two shelves, one for books you want, and another for books you have. You can also define how often the sync should occur. The \"Test Authorisation\" button will check your credentials are entered correctly. GoogleBooks API If you have an access key for GoogleBooks, enter it here. GoogleBooks has a different range of books to GoodReads for some authors. Try both and see which suits your library best. LibraryThing Developer Key If you have one we can use it as another source for downloading covers. All other librarything functions that we use don't need a developer key. File Formats eBooks Comma separated list of file extensions for eBooks. Default epub, mobi, pdf AudioBooks Comma separated list of file extensions for eBooks. Default mp3 You may find m4a is also useful depending on your audiobooks Magazines Comma separated list of file extensions for Magazines. Default pdf Most magazines seem to be pdf Various settings to do with importing books Ignore books with future publication date Don't try to download them yet. Authors are rescanned periodically so the book will be un-ignored after the date passes Ignore books with unknown publication date Goodreads sometimes has incomplete information, you can choose to ignore these books Ignore books with no isbn If you don't ignore these we will try to look up the isbn elsewhere, which can be slow Add ignored books to database For any of the above \"Ignore\" switches, you can add the book to the database marked as Ignored, or not create a database entry at all. Try google image search as final option for missing book covers If all else fails, try google image. You will get a cover, but it might not be correct. Google always gives you something even if it can't find the book you want. You can always search for a cover manually. Delete csv file or wishlist after successful import Automatic tidy up. The list will not be deleted if any books in it could not be matched. Blacklist failed downloads in history table This will allow an automatic retry of a different download. If the failure was a communication problem you might want to retry the same download, but if the failure was a corrupt file or an unwanted format you want to get a different download. Could become automated at a future date. Blacklist processed downloads in history table If the download succeeded but you don't like the copy, you can mark the book as wanted again. If this box is not ticked you will probably download the same copy. Tick this box to force a different one. NOTE: The blacklists use the entries in the history table, so if you clear the history the blacklists will not work. Language Import Languages Comma separated country shortcodes for languages of books to add to the library: GoodReads e.g: eng, en-US, spa, ita GoogleBooks e.g: en, es, it Default: en, eng, en-US Try adding \"Unknown\" to list if GoodReads is missing results, or put \"All\" if you don't want to check for language, but beware you could fill the library with lots of books in languages you can't read, as some of authors are translated into many languages. When you add an author to the database, LazyLibrarian uses this list to decide whether to include a book or not. Books that say they are in a language that is not in this list will be ignored (unless language set to All). At the end of a library scan or adding an author the log will say how many books were ignored for language reasons. If you have debug logging on, each book that is ignored will be listed with the language we think it is. GoodReads and GoogleBooks currently seem to have lots of books with \"Unknown\" language. Hopefully this will improve over time. LazyLibrarian tries to match as many as possible to a language using the book ISBN (if we know it) which reduces the unknown ones. We use LibraryThing for this. www.librarything.com Languages for Month Names Comma separated list of language codes. Default: blank Magazine Issues usually have a month in the title, eg \"PC Gamer July 2014\" We use this month name to decide how old the magazine is, and so whether to download it. English month names are built in. If you want to include French magazines, add fr_FR.utf8 The language name, eg \"fr_FR.utf8\" needs to exactly match the ones listed in your system locale (try locale -a to get a list of the languages installed on your machine) Alternatively you can supply a pre-built list of monthnames. Useful if you want magazine monthnames in a locale not available on the machine running lazylibrarian (eg docker containers). Copy the supplied example.monthnames.json to your lazylibrarian data directory (the one containing your database and config.ini) and name it monthnames.json, edit as required. The example file is English and Spanish and looks like this... [[\"en_GB.UTF-8\", \"en_GB.UTF-8\", \"es_ES.utf8\", \"es_ES.utf8\"], [\"january\", \"jan\", \"enero\", \"ene\"], [\"february\", \"feb\", \"febrero\", \"feb\"], [\"march\", \"mar\", \"marzo\", \"mar\"], [\"april\", \"apr\", \"abril\", \"abr\"], [\"may\", \"may\", \"mayo\", \"may\"], [\"june\", \"jun\", \"junio\", \"jun\"], [\"july\", \"jul\", \"julio\", \"jul\"], [\"august\", \"aug\", \"agosto\", \"ago\"], [\"september\", \"sep\", \"septiembre\", \"sep\"], [\"october\", \"oct\", \"octubre\", \"oct\"], [\"november\", \"nov\", \"noviembre\", \"nov\"], [\"december\", \"dec\", \"diciembre\", \"dic\"]] Note that each language is listed twice, once with full month name and again with the \"short\" name, and all month names are lower-case and un-accented Date Formats Format for Added Columns Dates when we added a book/magazine to the library Format for Issue Date How to display magazine issue dates Dates are stored internally in a format useful for sorting, but for display you might want to show something more readable.","title":"Importing"},{"location":"config_importing/#book-search-api","text":"Currently only supports GoodReads and GoogleBooks","title":"Book Search API"},{"location":"config_importing/#goodreads-api","text":"Access key for GoodReads","title":"GoodReads API"},{"location":"config_importing/#goodreads-sync","text":"LazyLibrarian is supplied with a default goodreads api key which is read-only, and gives access to search functions. If you want to sync your goodreads bookshelves with lazylibrarian you will need to get your own key and secret from https://www.goodreads.com/api/keys. Once you have your own key/secret enter them in lazylibrarian config and save the config. You can then obtain your goodreads oAuth token/secret to get write access to your goodreads account. You can select whether a book is allowed to be on both shelves. If using the default goodreads to-read/read shelves goodreads will override this and only allow the book on one shelf (you've either read it or you haven't) If using your own shelves they can be used as owned/read instead if you wish, so a book can be on both shelves. Press \"Request oAuth1\". A new goodreads window will open where you can confirm you want to give access to lazylibrarian. Once confirmed, press \"Request oAuth2\" to read and store the credentials in lazylibrarian config. You can now configure the bookshelves to use. You can use existing goodreads shelves or lazylibrarian can create new ones. Lazylibrarian supports two shelves, one for books you want, and another for books you have. You can also define how often the sync should occur. The \"Test Authorisation\" button will check your credentials are entered correctly.","title":"GoodReads Sync"},{"location":"config_importing/#googlebooks-api","text":"If you have an access key for GoogleBooks, enter it here. GoogleBooks has a different range of books to GoodReads for some authors. Try both and see which suits your library best.","title":"GoogleBooks API"},{"location":"config_importing/#librarything-developer-key","text":"If you have one we can use it as another source for downloading covers. All other librarything functions that we use don't need a developer key.","title":"LibraryThing Developer Key"},{"location":"config_importing/#file-formats","text":"","title":"File Formats"},{"location":"config_importing/#ebooks","text":"Comma separated list of file extensions for eBooks. Default epub, mobi, pdf","title":"eBooks"},{"location":"config_importing/#audiobooks","text":"Comma separated list of file extensions for eBooks. Default mp3 You may find m4a is also useful depending on your audiobooks","title":"AudioBooks"},{"location":"config_importing/#magazines","text":"Comma separated list of file extensions for Magazines. Default pdf Most magazines seem to be pdf","title":"Magazines"},{"location":"config_importing/#various-settings-to-do-with-importing-books","text":"Ignore books with future publication date Don't try to download them yet. Authors are rescanned periodically so the book will be un-ignored after the date passes Ignore books with unknown publication date Goodreads sometimes has incomplete information, you can choose to ignore these books Ignore books with no isbn If you don't ignore these we will try to look up the isbn elsewhere, which can be slow Add ignored books to database For any of the above \"Ignore\" switches, you can add the book to the database marked as Ignored, or not create a database entry at all. Try google image search as final option for missing book covers If all else fails, try google image. You will get a cover, but it might not be correct. Google always gives you something even if it can't find the book you want. You can always search for a cover manually. Delete csv file or wishlist after successful import Automatic tidy up. The list will not be deleted if any books in it could not be matched. Blacklist failed downloads in history table This will allow an automatic retry of a different download. If the failure was a communication problem you might want to retry the same download, but if the failure was a corrupt file or an unwanted format you want to get a different download. Could become automated at a future date. Blacklist processed downloads in history table If the download succeeded but you don't like the copy, you can mark the book as wanted again. If this box is not ticked you will probably download the same copy. Tick this box to force a different one. NOTE: The blacklists use the entries in the history table, so if you clear the history the blacklists will not work.","title":"Various settings to do with importing books"},{"location":"config_importing/#language","text":"","title":"Language"},{"location":"config_importing/#import-languages","text":"Comma separated country shortcodes for languages of books to add to the library: GoodReads e.g: eng, en-US, spa, ita GoogleBooks e.g: en, es, it Default: en, eng, en-US Try adding \"Unknown\" to list if GoodReads is missing results, or put \"All\" if you don't want to check for language, but beware you could fill the library with lots of books in languages you can't read, as some of authors are translated into many languages. When you add an author to the database, LazyLibrarian uses this list to decide whether to include a book or not. Books that say they are in a language that is not in this list will be ignored (unless language set to All). At the end of a library scan or adding an author the log will say how many books were ignored for language reasons. If you have debug logging on, each book that is ignored will be listed with the language we think it is. GoodReads and GoogleBooks currently seem to have lots of books with \"Unknown\" language. Hopefully this will improve over time. LazyLibrarian tries to match as many as possible to a language using the book ISBN (if we know it) which reduces the unknown ones. We use LibraryThing for this. www.librarything.com","title":"Import Languages"},{"location":"config_importing/#languages-for-month-names","text":"Comma separated list of language codes. Default: blank Magazine Issues usually have a month in the title, eg \"PC Gamer July 2014\" We use this month name to decide how old the magazine is, and so whether to download it. English month names are built in. If you want to include French magazines, add fr_FR.utf8 The language name, eg \"fr_FR.utf8\" needs to exactly match the ones listed in your system locale (try locale -a to get a list of the languages installed on your machine) Alternatively you can supply a pre-built list of monthnames. Useful if you want magazine monthnames in a locale not available on the machine running lazylibrarian (eg docker containers). Copy the supplied example.monthnames.json to your lazylibrarian data directory (the one containing your database and config.ini) and name it monthnames.json, edit as required. The example file is English and Spanish and looks like this... [[\"en_GB.UTF-8\", \"en_GB.UTF-8\", \"es_ES.utf8\", \"es_ES.utf8\"], [\"january\", \"jan\", \"enero\", \"ene\"], [\"february\", \"feb\", \"febrero\", \"feb\"], [\"march\", \"mar\", \"marzo\", \"mar\"], [\"april\", \"apr\", \"abril\", \"abr\"], [\"may\", \"may\", \"mayo\", \"may\"], [\"june\", \"jun\", \"junio\", \"jun\"], [\"july\", \"jul\", \"julio\", \"jul\"], [\"august\", \"aug\", \"agosto\", \"ago\"], [\"september\", \"sep\", \"septiembre\", \"sep\"], [\"october\", \"oct\", \"octubre\", \"oct\"], [\"november\", \"nov\", \"noviembre\", \"nov\"], [\"december\", \"dec\", \"diciembre\", \"dic\"]] Note that each language is listed twice, once with full month name and again with the \"short\" name, and all month names are lower-case and un-accented","title":"Languages for Month Names"},{"location":"config_importing/#date-formats","text":"Format for Added Columns Dates when we added a book/magazine to the library Format for Issue Date How to display magazine issue dates Dates are stored internally in a format useful for sorting, but for display you might want to show something more readable.","title":"Date Formats"},{"location":"config_interface/","text":"Server Details Hostname Address of the machine LazyLibrarian is running on. Default 0.0.0.0 You probably don't need to change this. Port Port to point your browser at for the web interface. Default 5299 eg localhost:5299 Web Root Prefix for web. usually used with a proxy frontend eg /lazylib so you would hit ip:port/lazylib Enable http proxy Set cherrypy tools.proxy.on True Note this is usually not needed for nginx, or for transparent proxying, and can cause redirects to 127.0.0.1 if set unnecessarily. If it is set, and you are NOT using apache2, you will need to set PROXY_LOCAL in your config.ini to reflect the header in use. This config option is not available in the web interface. Enable https access to lazylibrarian Allow login only over https Log Dir Where to store log files. We create a rolling log of 10 files, each around 200K The number of log files and maximum size are configurable in the config.ini file but not on the web interface. Older log entries are deleted as necessary to stay in these limits. Log Limit This is how many lines of log to keep in memory for the on-screen display. Larger screen logs use more memory and are slower to display. Log Files This is how many files to rotate. Log Size This is maximum size of each file. Log Level 0=Quiet, 1=Normal, 2=Debug Values larger than 2 are currently undefined and may change in later versions. They are used for detailed debugging and produce a lot of output Proxy Details If you are behind a proxy, set these values as appropriate Proxy Host Proxy Type Access Control Enable user accounts Switch on user accounts so each user can have different access rights, and also save their own read/to-read bookmarks, specify their preferred book type etc. See separate wiki page. Single user bypass login If you have user accounts enabled, but are the only user on your system, this will log you in automatically. Useful if you need user accounts for bookmarks If user accounts are NOT enabled... User name and password for logging into the web interface User Name Password If user accounts ARE enabled... Contact email for administrator This is the email your users will use to contact you for lost passwords, requests etc. Startup Launch Browser If ticked, launch a browser (or a new tab in a running browser) when LazyLibrarian starts up. Leave unticked if running LazyLibrarian on a headless server or if you don't want to log in at startup. Enable API If ticked, allow api access to LazyLibrarian, see wiki api page for details. Current api is displayed, or you can generate a new api key or edit the generated one. Appearance A selection of display features can be turned on and off, disable the parts you don't need for a cleaner interface Show Author Images Show Book Images Show Magazine Images Show Series Show Magazines Show AudioBooks Show column toggles Show titles ignoring definite article (The, A) * Show author surname first Interface Currently LazyLibrarian ships with it's old default interface (now called \"legacy\") and a much more modern bookstrap interface which works better with smaller screens than the default. It has many different themes available, the bookstrap theme selector is not visible in the default theme. Several newer features are ONLY available in the bookstrap interface, as some libraries used in the default interface are too old. Development work and new features are likely to be bookstrap only. Theme Choose the active theme here. Legacy or Bookstrap. Bookstrap is recommended. System Info button Show basic details about the system lazylibrarian is running on, including some software version information. This info can be very useful when tracing bugs and is included by default in the lazylibrarian debug logs. Check Version We automatically check LazyLibrarian is up to date every time you start it, and also check every few days as set by the Version Check Interval in your config file. This button will confirm if you are up to date, or show a list of recent commits if you are not running the current version. User Admin This button is only visible if user accounts are enabled and takes you to a page where the admin can manage user accounts","title":"Interface"},{"location":"config_interface/#server-details","text":"","title":"Server Details"},{"location":"config_interface/#hostname","text":"Address of the machine LazyLibrarian is running on. Default 0.0.0.0 You probably don't need to change this.","title":"Hostname"},{"location":"config_interface/#port","text":"Port to point your browser at for the web interface. Default 5299 eg localhost:5299","title":"Port"},{"location":"config_interface/#web-root","text":"Prefix for web. usually used with a proxy frontend eg /lazylib so you would hit ip:port/lazylib","title":"Web Root"},{"location":"config_interface/#enable-http-proxy","text":"Set cherrypy tools.proxy.on True Note this is usually not needed for nginx, or for transparent proxying, and can cause redirects to 127.0.0.1 if set unnecessarily. If it is set, and you are NOT using apache2, you will need to set PROXY_LOCAL in your config.ini to reflect the header in use. This config option is not available in the web interface.","title":"Enable http proxy"},{"location":"config_interface/#enable-https-access-to-lazylibrarian","text":"Allow login only over https","title":"Enable https access to lazylibrarian"},{"location":"config_interface/#log-dir","text":"Where to store log files. We create a rolling log of 10 files, each around 200K The number of log files and maximum size are configurable in the config.ini file but not on the web interface. Older log entries are deleted as necessary to stay in these limits.","title":"Log Dir"},{"location":"config_interface/#log-limit","text":"This is how many lines of log to keep in memory for the on-screen display. Larger screen logs use more memory and are slower to display.","title":"Log Limit"},{"location":"config_interface/#log-files","text":"This is how many files to rotate.","title":"Log Files"},{"location":"config_interface/#log-size","text":"This is maximum size of each file.","title":"Log Size"},{"location":"config_interface/#log-level","text":"0=Quiet, 1=Normal, 2=Debug Values larger than 2 are currently undefined and may change in later versions. They are used for detailed debugging and produce a lot of output","title":"Log Level"},{"location":"config_interface/#proxy-details","text":"If you are behind a proxy, set these values as appropriate","title":"Proxy Details"},{"location":"config_interface/#proxy-host","text":"","title":"Proxy Host"},{"location":"config_interface/#proxy-type","text":"","title":"Proxy Type"},{"location":"config_interface/#access-control","text":"","title":"Access Control"},{"location":"config_interface/#enable-user-accounts","text":"Switch on user accounts so each user can have different access rights, and also save their own read/to-read bookmarks, specify their preferred book type etc. See separate wiki page.","title":"Enable user accounts"},{"location":"config_interface/#single-user-bypass-login","text":"If you have user accounts enabled, but are the only user on your system, this will log you in automatically. Useful if you need user accounts for bookmarks If user accounts are NOT enabled... User name and password for logging into the web interface","title":"Single user bypass login"},{"location":"config_interface/#user-name","text":"","title":"User Name"},{"location":"config_interface/#password","text":"If user accounts ARE enabled...","title":"Password"},{"location":"config_interface/#contact-email-for-administrator","text":"This is the email your users will use to contact you for lost passwords, requests etc.","title":"Contact email for administrator"},{"location":"config_interface/#startup","text":"","title":"Startup"},{"location":"config_interface/#launch-browser","text":"If ticked, launch a browser (or a new tab in a running browser) when LazyLibrarian starts up. Leave unticked if running LazyLibrarian on a headless server or if you don't want to log in at startup.","title":"Launch Browser"},{"location":"config_interface/#enable-api","text":"If ticked, allow api access to LazyLibrarian, see wiki api page for details. Current api is displayed, or you can generate a new api key or edit the generated one.","title":"Enable API"},{"location":"config_interface/#appearance","text":"A selection of display features can be turned on and off, disable the parts you don't need for a cleaner interface Show Author Images Show Book Images Show Magazine Images Show Series Show Magazines Show AudioBooks Show column toggles Show titles ignoring definite article (The, A) * Show author surname first","title":"Appearance"},{"location":"config_interface/#interface","text":"Currently LazyLibrarian ships with it's old default interface (now called \"legacy\") and a much more modern bookstrap interface which works better with smaller screens than the default. It has many different themes available, the bookstrap theme selector is not visible in the default theme. Several newer features are ONLY available in the bookstrap interface, as some libraries used in the default interface are too old. Development work and new features are likely to be bookstrap only.","title":"Interface"},{"location":"config_interface/#theme","text":"Choose the active theme here. Legacy or Bookstrap. Bookstrap is recommended.","title":"Theme"},{"location":"config_interface/#system-info-button","text":"Show basic details about the system lazylibrarian is running on, including some software version information. This info can be very useful when tracing bugs and is included by default in the lazylibrarian debug logs.","title":"System Info button"},{"location":"config_interface/#check-version","text":"We automatically check LazyLibrarian is up to date every time you start it, and also check every few days as set by the Version Check Interval in your config file. This button will confirm if you are up to date, or show a list of recent commits if you are not running the current version.","title":"Check Version"},{"location":"config_interface/#user-admin","text":"This button is only visible if user accounts are enabled and takes you to a page where the admin can manage user accounts","title":"User Admin"},{"location":"config_menus/","text":"Config MenuBar Most of these are pretty selfexplanatory. [Shutdown] Shuts The system Down [Restart] Restarts LazyLibrarian [System Info] Gives some version and system info. Helpful for debugging. Startup cmd: [ /usr/bin/python , /app/lazylibrarian/LazyLibrarian.py , --datadir , /config , --nolaunch ] Interface: bookstrap Loglevel: 3 Sys_Encoding: UTF-8 git_repo: lazylibrarian git_user: dobytang git_branch: master latest_version: a4fd6e6241cb9cb8427ffd732fa53a6abd13a68b git_updated: Mon Oct 22 19:49:21 2018 current_version: a4fd6e6241cb9cb8427ffd732fa53a6abd13a68b commits_behind: 0 install_type: git auto_update: 1 Python version: [ 2.7.15 (default, Aug 16 2018, 14:17:09) , [GCC 6.4.0] ] Distribution: ( , , ) System: Linux Machine: x86_64 Platform: Linux-4.18.8-unRAID-x86_64-with uname: ( Linux , 23c4ed4cd40f , 4.18.8-unRAID , #1 SMP Sat Sep 15 09:15:50 PDT 2018 , x86_64 , ) version: #1 SMP Sat Sep 15 09:15:50 PDT 2018 mac_ver: ( , ( , , ), ) urllib3: 1.24 requests: 2.20.0 tls: TLS 1.2 cherrypy: 3.6.0 sqlite3: 3.24.0 unrar: DLL version 8 openssl: LibreSSL 2.7.4 pyOpenSSL: 18.0.0 cryptography: 2.3.1 magic: missing [Job Status] shows a \"wall\" of cover images from the books in your library, most recently added books first. Clicking on a cover image in the wall will open the book. [Check Version] shows a \"wall\" of cover images from the books in your library, most recently downloaded books first. Clicking on a cover image in the wall will open the book. [User Admin] RSS feed of recent downloads.","title":"Menus"},{"location":"config_menus/#config-menubar","text":"Most of these are pretty selfexplanatory. [Shutdown] Shuts The system Down [Restart] Restarts LazyLibrarian [System Info] Gives some version and system info. Helpful for debugging. Startup cmd: [ /usr/bin/python , /app/lazylibrarian/LazyLibrarian.py , --datadir , /config , --nolaunch ] Interface: bookstrap Loglevel: 3 Sys_Encoding: UTF-8 git_repo: lazylibrarian git_user: dobytang git_branch: master latest_version: a4fd6e6241cb9cb8427ffd732fa53a6abd13a68b git_updated: Mon Oct 22 19:49:21 2018 current_version: a4fd6e6241cb9cb8427ffd732fa53a6abd13a68b commits_behind: 0 install_type: git auto_update: 1 Python version: [ 2.7.15 (default, Aug 16 2018, 14:17:09) , [GCC 6.4.0] ] Distribution: ( , , ) System: Linux Machine: x86_64 Platform: Linux-4.18.8-unRAID-x86_64-with uname: ( Linux , 23c4ed4cd40f , 4.18.8-unRAID , #1 SMP Sat Sep 15 09:15:50 PDT 2018 , x86_64 , ) version: #1 SMP Sat Sep 15 09:15:50 PDT 2018 mac_ver: ( , ( , , ), ) urllib3: 1.24 requests: 2.20.0 tls: TLS 1.2 cherrypy: 3.6.0 sqlite3: 3.24.0 unrar: DLL version 8 openssl: LibreSSL 2.7.4 pyOpenSSL: 18.0.0 cryptography: 2.3.1 magic: missing [Job Status] shows a \"wall\" of cover images from the books in your library, most recently added books first. Clicking on a cover image in the wall will open the book. [Check Version] shows a \"wall\" of cover images from the books in your library, most recently downloaded books first. Clicking on a cover image in the wall will open the book. [User Admin] RSS feed of recent downloads.","title":"Config MenuBar"},{"location":"config_notifications/","text":"For all the notifiers, Notify on Snatch sends a message whenever a book/magazine is sent to one of the downloaders. Notify on Download sends a message when a snatched book/magazine has been successfully downloaded and added to the library. Some notifiers have the ability to send a test message to check the notifications work. For notifiers that can send to multiple devices, the test message will return a list of valid device IDs. Enable Twitter Notifications Notify on Snatch Notify on Download Request Authorisation Twitter Key Verify Key Test Twitter Enable Boxcar Notifications Notify on Snatch Notify on Download Boxcar Token Enable Pushbullet Notifications Notify on Snatch Notify on Download Pushbullet API Device ID Test Pushbullet Enable Pushover Notifications Notify on Snatch Notify on Download Pushover API Keys Device Priority Test Pushover Enable AndroidPN Notify on Snatch Notify on Download Broadcast AndroidPN Notification URL Username Test AndroidPN Enable NotifyMyAndroid Notify on Snatch Notify on Download API key Priority Test NMA Enable Email Notification Notify on Snatch Notify on Download Email From address Email To address SMTP Server address SMTP user and password SMTP port Use SSL Use TLS Test Email Enable Custom Notification This is a special notifier, which is a script to run. There are some example scripts with lazylibrarian. You can use it, for example, to notify a system we don't support yet. There is an example script in python and another in bash that shows how the notifiers work. There is also example_ebook_convert.py that can be used as a notifier to make sure you have a copy of both mobi and epub for all new downloads. It uses calibre ebook-convert to create one format from another. Use it as a base for your own notifiers. The notifiers are passed a list of database columns for a book or magazine, and details of the download source. See the examples for full details. If you create any other notifiers that you think might be useful to others, please upload them!","title":"Notifications"},{"location":"config_notifications/#enable-twitter-notifications","text":"Notify on Snatch Notify on Download Request Authorisation Twitter Key Verify Key Test Twitter","title":"Enable Twitter Notifications"},{"location":"config_notifications/#enable-boxcar-notifications","text":"Notify on Snatch Notify on Download Boxcar Token","title":"Enable Boxcar Notifications"},{"location":"config_notifications/#enable-pushbullet-notifications","text":"Notify on Snatch Notify on Download Pushbullet API Device ID Test Pushbullet","title":"Enable Pushbullet Notifications"},{"location":"config_notifications/#enable-pushover-notifications","text":"Notify on Snatch Notify on Download Pushover API Keys Device Priority Test Pushover","title":"Enable Pushover Notifications"},{"location":"config_notifications/#enable-androidpn","text":"Notify on Snatch Notify on Download Broadcast AndroidPN Notification URL Username Test AndroidPN","title":"Enable AndroidPN"},{"location":"config_notifications/#enable-notifymyandroid","text":"Notify on Snatch Notify on Download API key Priority Test NMA","title":"Enable NotifyMyAndroid"},{"location":"config_notifications/#enable-email-notification","text":"Notify on Snatch Notify on Download Email From address Email To address SMTP Server address SMTP user and password SMTP port Use SSL Use TLS Test Email","title":"Enable Email Notification"},{"location":"config_notifications/#enable-custom-notification","text":"This is a special notifier, which is a script to run. There are some example scripts with lazylibrarian. You can use it, for example, to notify a system we don't support yet. There is an example script in python and another in bash that shows how the notifiers work. There is also example_ebook_convert.py that can be used as a notifier to make sure you have a copy of both mobi and epub for all new downloads. It uses calibre ebook-convert to create one format from another. Use it as a base for your own notifiers. The notifiers are passed a list of database columns for a book or magazine, and details of the download source. See the examples for full details. If you create any other notifiers that you think might be useful to others, please upload them!","title":"Enable Custom Notification"},{"location":"config_processing/","text":"Intervals Setting an interval to zero will prevent the task from running NZB/Tor search How often to search nzb or tor providers for wanted books/magazines. Does not run if nothing is marked as \"Wanted\". RSS Search How often to search rss feeds for wanted books/magazines. The Goodreads wishlists / Listopia always run, but the RSS feed entries only run if something is marked as \"Wanted\" Post Processing When items have been found and sent to the downloaders, how often should we check the download directory to see if they have arrived. If there are no items marked as \"snatched\" this job will not be run. Version Check How often to check for a new LazyLibrarian version. Setting this to zero will also disable version check at startup. * Auto Update to new version Only applies to the automated update check. The manual check will not auto update, it gives you the option. Status Missing Book Status When you scan the library or add an author, if a book has been removed since the last scan what should we set it's status to? Skipped Wanted Have Ignored. \"Wanted\" will try to re-download the book. \"Have\" means \"I've got it, but I've moved it since you last looked\" \"Skipped\" and \"Ignored\" can be used to filter books into ones you don't want (yet) and ones you never want. New Book Status When we update an author, what status should we set all the new books to. New AudioBook Status Same options as for New Book Status New Authors Book Status When you add a new author, what status should we set their back-catalog. The first time you do a library scan you probably don't want to set \"Wanted\" as it will try to download every book by every author (except the books you've already got in your library) Include other books by new authors This will include details for other books by new authors found in wishlists or csv files, or when manually importing a book by a new author. If unticked we only include the books in the wishlist/csv Calibredb import program If you use Calibre and LazyLibrarian on the same machine and they share the same books, put the full pathname of your calibredb program here, or just calibredb if it's in your system path. LazyLibrarian will not import the books, it will ask calibredb to import the books and then update the LazyLibrarian database to match. The default method is to give calibredb the location of the book library, however since calibre v3.x calibredb can only access the book library if there is no running calibre, and no running calibre content server. The new v3.x method is to talk to calibre (or the content server) and ask them to add/remove/update books for us. If calibre-server is started with --enable-local-write and --listen-on=:: or --listen-on=0.0.0.0 it can be accessed via http://localhost:9000 and http://192.168.0.10:9000 as well as any other IP addresses configured on that machine. That way and for Lazylibrarian purposes, localhost can be accessed without authentication. If calibre-server is started with a network only address (non loopback/localhost), eg --listen-on=192.168.0.10 then authentication is needed to make changes. The content server needs to be started with --enable-auth or in calibre enable user/passwords in Preferences- Sharing over the net and also set up an account in calibre creating a user and password with write access and put the user/password in lazylibrarian config. The calibre content server address should look like http://hostname:port/#library (the #library part is optional and will use the default library if not included) Calibre Auto Add If you use Calibre on a different machine, or want to maintain separate LazyLibrarian and Calibre libraries, complete this to have LazyLibrarian downloaded books added into the Calibre library. Set Calibre to watch this directory for new books arriving. This should not be used if your LazyLibrarian base destination folder is already an existing Calibre library or you will end up with two copies of each book. In this case use the calibredb option above. Also it should not be used if you are using the content server. You don't need both. Only add eBook, not opf or jpg Let Calibre create it's own opf and cover image Folders Base Destination Folder This is where you store your book library. May be an existing shared Calibre Library. Alternate Import/Export Folder Temporary directory to import new ebooks, one at a time or multiple books if each is in their own subdirectory. LazyLibrarian may delete the directory after importing. Books in this directory should contain embedded metadata, or the directory should contain an .opf file with the same name as the book. Lazylibrarian will try to import the book (and if necessary the author) into the library using the author and title in the metadata. As a last resort LazyLibrarian will try to work out the author and title from the filename by matching it to the naming style in \"eBookDestination File\", see below. Also used as a directory to write a wishlist into (list of wanted books) or to import a wishlist from. Wishlists are csv files containing author and book_title, optionally isbn or bookID, other fields ignored. Name Formatting Series Pattern Series Name Pattern Series Number Pattern Allows a flexible display of series details in book filenames or foldernames eg (Lord of the Rings Book #1) eBook/AudioBook Foldername Pattern Naming style when creating new subdirectories in the book library (a.k.a. the base destination folder) eBook Filename Pattern Naming style for new books in the above folder AudioBook Filename Pattern Naming style for audiobooks as they may be in multiple chapters or parts Variables - not all are available in all fields $Author - author name as stored in the database $Title - book title as stored in the database $Series - Formatted series name/number eg (Lord of the Rings #2) if either $SerName or $SerNum are not empty $SerName - Series name as supplied by goodreads, or empty string $SerNum - Series number as supplied by goodreads, or empty string $FmtName - Formatted series name or empty string eg Series: Lord of the Rings $FmtNum - Formatted series number or empty string eg Book #2 or - 02 - $PadNum - zero padded series number or empty string eg 02 $PubYear - year of publication of the book (if known) or empty string $SerYear - year of publication of the first book in the series (if known) or empty string $Abridged - If state known returns (Abridged) or (Unabridged) or empty string $$ - Inserts a space. Only needed on the start or end of a format string if you want spaces inbetween NOTE: If series number is not numeric (eg Book Two) it gets added to series name and series number returns empty string Example: $Series ($SerName$FmtNum) and $FmtNum $$#$PadNum will produce (Lord of the Rings #02) or if the number isn't known (Lord of the Rings) as the space and hash are part of the $FmtNum expression which is empty if there is no series number Keep Original Files If ticked, books found by the downloaders or placed in the Alternate Import Folder will be copied into the library. If NOT ticked they will be moved into the library, ie the original downloaded versions will be deleted. Only import one book format If ticked, and an nzb or torrent contains multiple formats of a book, only import one format. LazyLibrarian will import the first matching format from the ebook format list. If unticked, import all formats found in the list. eg if a download contains the same book as mobi,epub,azw3 and your ebook format list is epub,mobi with the option ticked you will import epub (first match in the ebook format list) with the option unticked you will import mobi,epub but not azw3 as that's not in the ebook format list Magazine Destination Folder Naming style for magazine folders, either inside the book library, or in a separate folder Magazine Destination File Naming style for new magazine issues in the above folder Magazines Inside Book Folder Leave unticked if the magazine folder is a full path to a directory. Tick if the magazine folder is a sub-folder inside the book library. Magazine sub-folder names should start with an underscore or a period, or should contain the special file .ll_ignore so we can identify them as containing magazines rather than books and ignore them on a book scan. Quick open single issues of magazines If only one issue available, open it, otherwise show a page for the magazine title with just the one issue Miscellaneous Cache Expire After Author and book details from googlebooks and goodreads are cached to reduce calls to their servers. The servers have access limits, both frequency of access and number of hits per day. Caching results means we should stay well under the limits. If our cached entries are older than this number of days, we will reload the details from the servers. Use 0 to disable caching Remove Failed Tasks After When the postprocessor has completed processing any downloaded books, it will look for any that have not yet arrived in the download folder. If they were requested more than this number of hours ago, assume they are not going to complete. Re-mark the book as \"Wanted\", mark this download as \"Failed\", and ask the relevant downloader to delete the incomplete task. The next time the \"search\" tasks run, they will try to download a different copy. Use 0 to disable removing failed tasks NOTE: Removing failed tasks is not supported on versions of sabnzbd earlier than 0.8.0 Search Match Ratio When comparing results from torrent and nzb searches, how accurate do we want to match the names. We need a bit if \"wiggle room\" to cater for different accents on characters, different spellings of author names, eg JRR Tolkien is the same as J. R. R. Tolkien but if we set this figure too low we will get matches against the wrong books, so it's configurable. Somewhere around 80% to 90% works well for me. Download Match Ratio When the downloaders grab a torrent or nzb, we don't have full control over the downloaded filename, so we need some wiggle room here too. Usenet is good, give us the filename we asked for, but torrent names are not always exact. When scanning the download directory for matches, how close should the name match. Maximum Search Pages Maximum Author Pages When searching, how many pages of results to grab. Use 0 to select all pages. Maximum results on coverwall When showing covers in a wall layout, how many should we show. Large numbers can take a significant amount of time to draw. We show images \"most recent first\" so the new books are at the top. Use 0 to show all images Git Program Full pathname to git if not found in your system path. Used to check your LazyLibrarian version is up-to-date. If you are running on Windows and don't already have git you can download it from https://git-scm.com/download/win Conversion Program When we download a magazine, we can create a cover image from the first page. If you don't want covers, put None in here. LazyLibrarian will try to use ghostscript for cover creation if it is installed in your system \"path\", or if a local copy is found in the lazylibrarian folder. If you have Imagemagick installed on your LazyLibrarian machine and your python installation includes either PythonMagick or Wand we can detect and use those interfaces automatically. Some (all?) Synology NAS units have incomplete or old installations of imagemagick and/or ghostscript which imagemagick uses. In this case there is another work-around. See the \"Synology Users\" wiki entry. Full Scan If this is ticked, when you do a library scan it will check all the books in the library and remove the \"Open\" status on the database entries for any books that have been deleted since the last scan. Create opf files for magazines Useful if importing them into calibre One Book Per Directory If you keep multiple versions of the same book in your library, eg a mobi and an epub of the same book in the same folder, tick this box. LazyLibrarian will then scan faster, as it will only process one book per folder. Rename existing books on libraryscan This renames existing files in your book library to match eBook/AudioBook Filename Patterns. Does not rename if the folder looks like a Calibre foldername, as Calibre would not be able to find the books Rename existing magazines on libraryscan This renames existing files to match Magazine Filename Pattern Add Authors When scanning the library, if a book is found by an author who isn't already in the database, should LazyLibrarian add the author and list all their books in the database. If not ticked, only the book found will be added, not the list of all the authors books, and the author will be marked as Ignored so will not show in the default lists or searches. The book will show in the eBooks page. Add Series Info If you like to arrange your books in series, or collect series, you need to tick this. If you soon't then lazylibrarian will not try to download any series info. Turn it off if you don't need series info, it's faster. Search when added This will auto search for books/mags as soon as you add them to the database. Leave unticked to search for them later on a scheduled task or a manual search.","title":"Processing"},{"location":"config_processing/#intervals","text":"Setting an interval to zero will prevent the task from running NZB/Tor search How often to search nzb or tor providers for wanted books/magazines. Does not run if nothing is marked as \"Wanted\". RSS Search How often to search rss feeds for wanted books/magazines. The Goodreads wishlists / Listopia always run, but the RSS feed entries only run if something is marked as \"Wanted\" Post Processing When items have been found and sent to the downloaders, how often should we check the download directory to see if they have arrived. If there are no items marked as \"snatched\" this job will not be run. Version Check How often to check for a new LazyLibrarian version. Setting this to zero will also disable version check at startup. * Auto Update to new version Only applies to the automated update check. The manual check will not auto update, it gives you the option.","title":"Intervals"},{"location":"config_processing/#status","text":"Missing Book Status When you scan the library or add an author, if a book has been removed since the last scan what should we set it's status to? Skipped Wanted Have Ignored. \"Wanted\" will try to re-download the book. \"Have\" means \"I've got it, but I've moved it since you last looked\" \"Skipped\" and \"Ignored\" can be used to filter books into ones you don't want (yet) and ones you never want. New Book Status When we update an author, what status should we set all the new books to. New AudioBook Status Same options as for New Book Status New Authors Book Status When you add a new author, what status should we set their back-catalog. The first time you do a library scan you probably don't want to set \"Wanted\" as it will try to download every book by every author (except the books you've already got in your library) Include other books by new authors This will include details for other books by new authors found in wishlists or csv files, or when manually importing a book by a new author. If unticked we only include the books in the wishlist/csv Calibredb import program If you use Calibre and LazyLibrarian on the same machine and they share the same books, put the full pathname of your calibredb program here, or just calibredb if it's in your system path. LazyLibrarian will not import the books, it will ask calibredb to import the books and then update the LazyLibrarian database to match. The default method is to give calibredb the location of the book library, however since calibre v3.x calibredb can only access the book library if there is no running calibre, and no running calibre content server. The new v3.x method is to talk to calibre (or the content server) and ask them to add/remove/update books for us. If calibre-server is started with --enable-local-write and --listen-on=:: or --listen-on=0.0.0.0 it can be accessed via http://localhost:9000 and http://192.168.0.10:9000 as well as any other IP addresses configured on that machine. That way and for Lazylibrarian purposes, localhost can be accessed without authentication. If calibre-server is started with a network only address (non loopback/localhost), eg --listen-on=192.168.0.10 then authentication is needed to make changes. The content server needs to be started with --enable-auth or in calibre enable user/passwords in Preferences- Sharing over the net and also set up an account in calibre creating a user and password with write access and put the user/password in lazylibrarian config. The calibre content server address should look like http://hostname:port/#library (the #library part is optional and will use the default library if not included) Calibre Auto Add If you use Calibre on a different machine, or want to maintain separate LazyLibrarian and Calibre libraries, complete this to have LazyLibrarian downloaded books added into the Calibre library. Set Calibre to watch this directory for new books arriving. This should not be used if your LazyLibrarian base destination folder is already an existing Calibre library or you will end up with two copies of each book. In this case use the calibredb option above. Also it should not be used if you are using the content server. You don't need both. Only add eBook, not opf or jpg Let Calibre create it's own opf and cover image","title":"Status"},{"location":"config_processing/#folders","text":"Base Destination Folder This is where you store your book library. May be an existing shared Calibre Library. Alternate Import/Export Folder Temporary directory to import new ebooks, one at a time or multiple books if each is in their own subdirectory. LazyLibrarian may delete the directory after importing. Books in this directory should contain embedded metadata, or the directory should contain an .opf file with the same name as the book. Lazylibrarian will try to import the book (and if necessary the author) into the library using the author and title in the metadata. As a last resort LazyLibrarian will try to work out the author and title from the filename by matching it to the naming style in \"eBookDestination File\", see below. Also used as a directory to write a wishlist into (list of wanted books) or to import a wishlist from. Wishlists are csv files containing author and book_title, optionally isbn or bookID, other fields ignored.","title":"Folders"},{"location":"config_processing/#name-formatting","text":"Series Pattern Series Name Pattern Series Number Pattern Allows a flexible display of series details in book filenames or foldernames eg (Lord of the Rings Book #1) eBook/AudioBook Foldername Pattern Naming style when creating new subdirectories in the book library (a.k.a. the base destination folder) eBook Filename Pattern Naming style for new books in the above folder AudioBook Filename Pattern Naming style for audiobooks as they may be in multiple chapters or parts Variables - not all are available in all fields $Author - author name as stored in the database $Title - book title as stored in the database $Series - Formatted series name/number eg (Lord of the Rings #2) if either $SerName or $SerNum are not empty $SerName - Series name as supplied by goodreads, or empty string $SerNum - Series number as supplied by goodreads, or empty string $FmtName - Formatted series name or empty string eg Series: Lord of the Rings $FmtNum - Formatted series number or empty string eg Book #2 or - 02 - $PadNum - zero padded series number or empty string eg 02 $PubYear - year of publication of the book (if known) or empty string $SerYear - year of publication of the first book in the series (if known) or empty string $Abridged - If state known returns (Abridged) or (Unabridged) or empty string $$ - Inserts a space. Only needed on the start or end of a format string if you want spaces inbetween NOTE: If series number is not numeric (eg Book Two) it gets added to series name and series number returns empty string Example: $Series ($SerName$FmtNum) and $FmtNum $$#$PadNum will produce (Lord of the Rings #02) or if the number isn't known (Lord of the Rings) as the space and hash are part of the $FmtNum expression which is empty if there is no series number Keep Original Files If ticked, books found by the downloaders or placed in the Alternate Import Folder will be copied into the library. If NOT ticked they will be moved into the library, ie the original downloaded versions will be deleted. Only import one book format If ticked, and an nzb or torrent contains multiple formats of a book, only import one format. LazyLibrarian will import the first matching format from the ebook format list. If unticked, import all formats found in the list. eg if a download contains the same book as mobi,epub,azw3 and your ebook format list is epub,mobi with the option ticked you will import epub (first match in the ebook format list) with the option unticked you will import mobi,epub but not azw3 as that's not in the ebook format list Magazine Destination Folder Naming style for magazine folders, either inside the book library, or in a separate folder Magazine Destination File Naming style for new magazine issues in the above folder Magazines Inside Book Folder Leave unticked if the magazine folder is a full path to a directory. Tick if the magazine folder is a sub-folder inside the book library. Magazine sub-folder names should start with an underscore or a period, or should contain the special file .ll_ignore so we can identify them as containing magazines rather than books and ignore them on a book scan. Quick open single issues of magazines If only one issue available, open it, otherwise show a page for the magazine title with just the one issue","title":"Name Formatting"},{"location":"config_processing/#miscellaneous","text":"Cache Expire After Author and book details from googlebooks and goodreads are cached to reduce calls to their servers. The servers have access limits, both frequency of access and number of hits per day. Caching results means we should stay well under the limits. If our cached entries are older than this number of days, we will reload the details from the servers. Use 0 to disable caching Remove Failed Tasks After When the postprocessor has completed processing any downloaded books, it will look for any that have not yet arrived in the download folder. If they were requested more than this number of hours ago, assume they are not going to complete. Re-mark the book as \"Wanted\", mark this download as \"Failed\", and ask the relevant downloader to delete the incomplete task. The next time the \"search\" tasks run, they will try to download a different copy. Use 0 to disable removing failed tasks NOTE: Removing failed tasks is not supported on versions of sabnzbd earlier than 0.8.0 Search Match Ratio When comparing results from torrent and nzb searches, how accurate do we want to match the names. We need a bit if \"wiggle room\" to cater for different accents on characters, different spellings of author names, eg JRR Tolkien is the same as J. R. R. Tolkien but if we set this figure too low we will get matches against the wrong books, so it's configurable. Somewhere around 80% to 90% works well for me. Download Match Ratio When the downloaders grab a torrent or nzb, we don't have full control over the downloaded filename, so we need some wiggle room here too. Usenet is good, give us the filename we asked for, but torrent names are not always exact. When scanning the download directory for matches, how close should the name match. Maximum Search Pages Maximum Author Pages When searching, how many pages of results to grab. Use 0 to select all pages. Maximum results on coverwall When showing covers in a wall layout, how many should we show. Large numbers can take a significant amount of time to draw. We show images \"most recent first\" so the new books are at the top. Use 0 to show all images Git Program Full pathname to git if not found in your system path. Used to check your LazyLibrarian version is up-to-date. If you are running on Windows and don't already have git you can download it from https://git-scm.com/download/win Conversion Program When we download a magazine, we can create a cover image from the first page. If you don't want covers, put None in here. LazyLibrarian will try to use ghostscript for cover creation if it is installed in your system \"path\", or if a local copy is found in the lazylibrarian folder. If you have Imagemagick installed on your LazyLibrarian machine and your python installation includes either PythonMagick or Wand we can detect and use those interfaces automatically. Some (all?) Synology NAS units have incomplete or old installations of imagemagick and/or ghostscript which imagemagick uses. In this case there is another work-around. See the \"Synology Users\" wiki entry. Full Scan If this is ticked, when you do a library scan it will check all the books in the library and remove the \"Open\" status on the database entries for any books that have been deleted since the last scan. Create opf files for magazines Useful if importing them into calibre One Book Per Directory If you keep multiple versions of the same book in your library, eg a mobi and an epub of the same book in the same folder, tick this box. LazyLibrarian will then scan faster, as it will only process one book per folder. Rename existing books on libraryscan This renames existing files in your book library to match eBook/AudioBook Filename Patterns. Does not rename if the folder looks like a Calibre foldername, as Calibre would not be able to find the books Rename existing magazines on libraryscan This renames existing files to match Magazine Filename Pattern Add Authors When scanning the library, if a book is found by an author who isn't already in the database, should LazyLibrarian add the author and list all their books in the database. If not ticked, only the book found will be added, not the list of all the authors books, and the author will be marked as Ignored so will not show in the default lists or searches. The book will show in the eBooks page. Add Series Info If you like to arrange your books in series, or collect series, you need to tick this. If you soon't then lazylibrarian will not try to download any series info. Turn it off if you don't need series info, it's faster. Search when added This will auto search for books/mags as soon as you add them to the database. Leave unticked to search for them later on a scheduled task or a manual search.","title":"Miscellaneous"},{"location":"config_providers/","text":"Newznab Providers For each newznab provider, enter the following details. When you fill a provider slot and save it, a new empty slot appears. URL eg https://api.nzbplanet.net API Your personal api as supplied by the newznab provider Newznab and nZEDb use different categories for ebooks and magazines. LazyLibrarian queries them for capabilities, but not all providers give enough info. If you get errors in the log from newznab searches saying \"unknown function\" or similar, please read the \"filters\" section. Torznab Providers Torznab is a method for indexing and searching torrents. See https://github.com/Jackett/Jackett URL URL of the torznab/jackett indexer API Your api key for the torznab/jackett indexer RSS/WishList Providers Only plain rss feeds or rss feeds with embedded credentials are known to work, eg http://kat.cr/books/?rss=1 https://www.usenet-crawler.com/rss?t=7020 dl=1 i=xxxxxx r=xxxxxxxxxxxxxxxxxxxxxxxx Feedback on other sites (working or not) would be appreciated URL URL of feed, or feed with embedded credentials NOTE: Goodreads RSS wishlists or Listopia html pages can also be entered as an RSS provider feed, as can New York Times best-sellers pages, eg https://www.nytimes.com/books/best-sellers/ These will be scanned periodically for changes like a true rss feed, and lazylibrarian will attempt to download all books found in the list. As some listopia lists can be quite long you can limit the number of pages to return Torrent Providers Currently only the built in sites are known to work. Feedback on other sites (working or not) would be appreciated. New sites may be added on request Direct Download Providers Currently only libgen is available. There are two entries for libgen, so you can use the main search and also the foreignfiction search. Note that \"foreign\" in this context means non-russian Priorities Most providers have an optional Priority setting. If the same download is available from more than one provider we request it from the one with the highest priority, this means you can prefer nzb over torrent, one torrent source over another etc. * Downloads are ranked according to how closely they match the required author/title first, priority is the second filter. This means if there are equally good matches at more than one provider the priority is used to decide, otherwise we grab the \"best\" match ignoring any priority settings. Types Valid types are one or more of (A)udio (E)book (M)agazine We will only search the provider for an ebook if there is an E in the Types entry for the provider. This means you can skip searching providers that aren't relevant, eg libgen doesn't do audiobooks For a wishlist, the types entry is used when searching for entries in the wishlist, eg you can just download the New York Times best sellers as audiobooks if you want. Blocked Providers button If a provider returns an error we block access to it for a limited time. Usually it's a communication error or a daily limit exceeded. The button shows a popup of blocked providers and allows you to unblock them if you wish rather than wait for the timer to expire.","title":"Providers"},{"location":"config_providers/#newznab-providers","text":"For each newznab provider, enter the following details. When you fill a provider slot and save it, a new empty slot appears. URL eg https://api.nzbplanet.net API Your personal api as supplied by the newznab provider Newznab and nZEDb use different categories for ebooks and magazines. LazyLibrarian queries them for capabilities, but not all providers give enough info. If you get errors in the log from newznab searches saying \"unknown function\" or similar, please read the \"filters\" section.","title":"Newznab Providers"},{"location":"config_providers/#torznab-providers","text":"Torznab is a method for indexing and searching torrents. See https://github.com/Jackett/Jackett URL URL of the torznab/jackett indexer API Your api key for the torznab/jackett indexer","title":"Torznab Providers"},{"location":"config_providers/#rsswishlist-providers","text":"Only plain rss feeds or rss feeds with embedded credentials are known to work, eg http://kat.cr/books/?rss=1 https://www.usenet-crawler.com/rss?t=7020 dl=1 i=xxxxxx r=xxxxxxxxxxxxxxxxxxxxxxxx Feedback on other sites (working or not) would be appreciated URL URL of feed, or feed with embedded credentials NOTE: Goodreads RSS wishlists or Listopia html pages can also be entered as an RSS provider feed, as can New York Times best-sellers pages, eg https://www.nytimes.com/books/best-sellers/ These will be scanned periodically for changes like a true rss feed, and lazylibrarian will attempt to download all books found in the list. As some listopia lists can be quite long you can limit the number of pages to return","title":"RSS/WishList Providers"},{"location":"config_providers/#torrent-providers","text":"Currently only the built in sites are known to work. Feedback on other sites (working or not) would be appreciated. New sites may be added on request","title":"Torrent Providers"},{"location":"config_providers/#direct-download-providers","text":"Currently only libgen is available. There are two entries for libgen, so you can use the main search and also the foreignfiction search. Note that \"foreign\" in this context means non-russian","title":"Direct Download Providers"},{"location":"config_providers/#priorities","text":"Most providers have an optional Priority setting. If the same download is available from more than one provider we request it from the one with the highest priority, this means you can prefer nzb over torrent, one torrent source over another etc. * Downloads are ranked according to how closely they match the required author/title first, priority is the second filter. This means if there are equally good matches at more than one provider the priority is used to decide, otherwise we grab the \"best\" match ignoring any priority settings.","title":"Priorities"},{"location":"config_providers/#types","text":"Valid types are one or more of (A)udio (E)book (M)agazine We will only search the provider for an ebook if there is an E in the Types entry for the provider. This means you can skip searching providers that aren't relevant, eg libgen doesn't do audiobooks For a wishlist, the types entry is used when searching for entries in the wishlist, eg you can just download the New York Times best sellers as audiobooks if you want.","title":"Types"},{"location":"config_providers/#blocked-providers-button","text":"If a provider returns an error we block access to it for a limited time. Usually it's a communication error or a daily limit exceeded. The button shows a popup of blocked providers and allows you to unblock them if you wish rather than wait for the timer to expire.","title":"Blocked Providers button"},{"location":"ebooks/","text":"MenuBar [Search] button searches your download providers for all ebooks marked \"Wanted\". You can also configure a task to do this at regular intervals in config. [Run-Post-Processor] adds any books in your download directory to your library. You can also configure a task to do this at regular intervals in config. [LibraryScan] will search your library (eBook Library Folder, defined in config) and add all the books it can find into your lazylibrarian database. [Additions] shows a \"wall\" of cover images from the books in your library, most recently added books first. Clicking on a cover image in the wall will open the book. [Downloads] shows a \"wall\" of cover images from the books in your library, most recently downloaded books first. Clicking on a cover image in the wall will open the book. [RSS] RSS feed of recent downloads. To the right of the buttons you might see a language selector This only appears if there are results in more than one language. Below this on the left is to change the status of ebooks. Status [Wanted] Mark selected book(s) as wanted and LazyLibrarian will search for them [Have] Mark book(s) selected as have and LazyLibrarian will NOT search. [Ignored] Ignore book(s) from searches and hide from main window. [Skip] Skip searching for selected book(s). [Removed] remove book(s) from LazyLibrarian database. Does not delete local files.For books, if the author is active, this is changed to Ignored [Delete] delete book(s) from database and deletes local files as well. [Unread] Mark book(s) as unread in the database [Read] mark book(s) as read in the database and show a bookmark [ToRead] Mark book(s) as to be read and show a bookmark After this are toggles, rows per page and results filter as described in the homepage. In the table, clicking on the book cover image shows a larger image. Clicking the author name takes you to the authors page. Under the book title are buttons eg GoodReads LibraryThing Manual (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. See Pages: Manual . The Status column shows the current status of the book in the library. [Open] and [Search] are clickable buttons, the other statuses are just for information. If you have user accounts enabled and have set a bookmark, it appears on the status button. Filled in for \"I have read\" or outline for \"I want to read\"","title":"Ebooks"},{"location":"ebooks/#menubar","text":"[Search] button searches your download providers for all ebooks marked \"Wanted\". You can also configure a task to do this at regular intervals in config. [Run-Post-Processor] adds any books in your download directory to your library. You can also configure a task to do this at regular intervals in config. [LibraryScan] will search your library (eBook Library Folder, defined in config) and add all the books it can find into your lazylibrarian database. [Additions] shows a \"wall\" of cover images from the books in your library, most recently added books first. Clicking on a cover image in the wall will open the book. [Downloads] shows a \"wall\" of cover images from the books in your library, most recently downloaded books first. Clicking on a cover image in the wall will open the book. [RSS] RSS feed of recent downloads. To the right of the buttons you might see a language selector This only appears if there are results in more than one language. Below this on the left is to change the status of ebooks.","title":"MenuBar"},{"location":"ebooks/#status","text":"[Wanted] Mark selected book(s) as wanted and LazyLibrarian will search for them [Have] Mark book(s) selected as have and LazyLibrarian will NOT search. [Ignored] Ignore book(s) from searches and hide from main window. [Skip] Skip searching for selected book(s). [Removed] remove book(s) from LazyLibrarian database. Does not delete local files.For books, if the author is active, this is changed to Ignored [Delete] delete book(s) from database and deletes local files as well. [Unread] Mark book(s) as unread in the database [Read] mark book(s) as read in the database and show a bookmark [ToRead] Mark book(s) as to be read and show a bookmark After this are toggles, rows per page and results filter as described in the homepage. In the table, clicking on the book cover image shows a larger image. Clicking the author name takes you to the authors page. Under the book title are buttons eg GoodReads LibraryThing Manual (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. See Pages: Manual . The Status column shows the current status of the book in the library. [Open] and [Search] are clickable buttons, the other statuses are just for information. If you have user accounts enabled and have set a bookmark, it appears on the status button. Filled in for \"I have read\" or outline for \"I want to read\"","title":"Status"},{"location":"history/","text":"Very simple table, nothing to alter, just info. Menu The menu bar has five buttons [Clear All History] just wipes all history as you would expect. [Clear Processed] just clear processed entries [Clear Failed] Clear only failed items [Clear Snatched] Can be useful to stop downloads that have been stalled, eg an incomplete torrent, though you can also choose to automate clearing failed/stalled downloads with a setting in config. [Download Count] This displays a pop-up showing how many downloads were successfully processed from each provider. If all your downloads come from one or two providers, it might be worth dropping the others to save time and bandwidth. On the pop-up is a button to clear the totals if you want to start counting again.","title":"History"},{"location":"history/#menu","text":"The menu bar has five buttons [Clear All History] just wipes all history as you would expect. [Clear Processed] just clear processed entries [Clear Failed] Clear only failed items [Clear Snatched] Can be useful to stop downloads that have been stalled, eg an incomplete torrent, though you can also choose to automate clearing failed/stalled downloads with a setting in config. [Download Count] This displays a pop-up showing how many downloads were successfully processed from each provider. If all your downloads come from one or two providers, it might be worth dropping the others to save time and bandwidth. On the pop-up is a button to clear the totals if you want to start counting again.","title":"Menu"},{"location":"install/","text":"Installation LazyLibrarian runs by default on port 5299 at http://localhost:5299 Linux / Mac OS X: Install Python 2 v2.6 or higher, or Python 3 v3.5 or higher Git clone/extract LL wherever you like Run \"python LazyLibrarian.py -d\" to start in daemon mode Fill in all the config (see Wiki for full configuration) Start in daemon mode with python LazyLibrarian.py -daemon Documentation: Wiki Online (new site goes here) Support/Issues reddit github tracker Turorials Docker Config (thanks @mccorkled) For more options see the Wiki . Updates Auto updates are available via interface from master for git and source installs Packages rpm deb and snap packages Releases The snap package is confined to users home directory, so all books and downloads need to be accessible from there too. Install the snap package with flags --dangerous --devmode AUR package available here: AUR QNAP LazyLibrarian is now available for the QNAP NAS via sherpa. QNAP Docker packages armhf version ARMHF x64 version x64 x64 with calibredb","title":"Install Options"},{"location":"install/#installation","text":"LazyLibrarian runs by default on port 5299 at http://localhost:5299 Linux / Mac OS X: Install Python 2 v2.6 or higher, or Python 3 v3.5 or higher Git clone/extract LL wherever you like Run \"python LazyLibrarian.py -d\" to start in daemon mode Fill in all the config (see Wiki for full configuration) Start in daemon mode with python LazyLibrarian.py -daemon","title":"Installation"},{"location":"install/#documentation","text":"Wiki Online (new site goes here)","title":"Documentation:"},{"location":"install/#supportissues","text":"reddit github tracker","title":"Support/Issues"},{"location":"install/#turorials","text":"Docker Config (thanks @mccorkled) For more options see the Wiki .","title":"Turorials"},{"location":"install/#updates","text":"Auto updates are available via interface from master for git and source installs","title":"Updates"},{"location":"install/#packages","text":"rpm deb and snap packages Releases The snap package is confined to users home directory, so all books and downloads need to be accessible from there too. Install the snap package with flags --dangerous --devmode AUR package available here: AUR QNAP LazyLibrarian is now available for the QNAP NAS via sherpa. QNAP","title":"Packages"},{"location":"install/#docker-packages","text":"armhf version ARMHF x64 version x64 x64 with calibredb","title":"Docker packages"},{"location":"logs/","text":"Very simple table, nothing to alter, just info. Menu The menu bar has two or three buttons [Clear Log] clears the on screen log and also the log files. [Start Debug Log] [Stop Debug Log] turn debug logging on/off. You can also do this by setting loglevel in config, but the buttons are useful for getting focused debug logs to help tracking down problems. When debug logging is ON you get a third button [Save Debug Log] This will save an anonymised debug log working backwards from when you press \"save debug log\" until the most recent \"start debug log\" message. Details of your lazylibrarian installation will be included in the log (operating system, installation type, python version, interface used) and the log lines will have all passwords and api keys removed. The log is saved as \"debug.zip\" in the lazylibrarian log folder (location is also shown on screen in the log page). You can unzip and inspect the log, or upload it with a bug report.","title":"Logs"},{"location":"logs/#menu","text":"The menu bar has two or three buttons [Clear Log] clears the on screen log and also the log files. [Start Debug Log] [Stop Debug Log] turn debug logging on/off. You can also do this by setting loglevel in config, but the buttons are useful for getting focused debug logs to help tracking down problems. When debug logging is ON you get a third button [Save Debug Log] This will save an anonymised debug log working backwards from when you press \"save debug log\" until the most recent \"start debug log\" message. Details of your lazylibrarian installation will be included in the log (operating system, installation type, python version, interface used) and the log lines will have all passwords and api keys removed. The log is saved as \"debug.zip\" in the lazylibrarian log folder (location is also shown on screen in the log page). You can unzip and inspect the log, or upload it with a bug report.","title":"Menu"},{"location":"magazines/","text":"Menu The menu bar has six buttons [Search] searches your download providers for all magazines marked \"Wanted\" [PostProcessor] adds any magazines in your download directory (defined in config) to your library (also defined in config) [LibraryScan] will search your library and add all the magazines it can find into your lazylibrarian database, creating cover images where possible. [Past Issues] shows a table of magazine issues that were not selected for download, so you can manually add them. The Past Issues table is recreated each time magazinescan is run. [Recent Issues] shows a \"wall\" of cover images from the magazines in your library, most recently added first. Clicking on a cover image in the wall will open the magazine. [RSS] To the right of the buttons is a magazine selector This is used to search and add new magazine titles. Below you will find the usual status selector, toggles, rows per page and results filter as described in the homepage. [Active] Keep trying to find new issues of this magazine(s) and download new issues [Paused] Stop looking for new issues of this magazine. [Reset] Look for old issues (not just newer than latest issue) [Remove] remove selected magazine(s)from LazyLibrarian database. Does not delete local files. [Delete] delete magazine(s) selected from database and deletes local files as well. In the table, clicking on the magazine cover image shows a larger image. The Status column has either [Show] or [Open] clickable buttons. [Show] takes you to a page with all issues of that magazine, [Open] (when configured) allows you to open a magazine if you only have one issue downloaded.","title":"Magazines"},{"location":"magazines/#menu","text":"The menu bar has six buttons [Search] searches your download providers for all magazines marked \"Wanted\" [PostProcessor] adds any magazines in your download directory (defined in config) to your library (also defined in config) [LibraryScan] will search your library and add all the magazines it can find into your lazylibrarian database, creating cover images where possible. [Past Issues] shows a table of magazine issues that were not selected for download, so you can manually add them. The Past Issues table is recreated each time magazinescan is run. [Recent Issues] shows a \"wall\" of cover images from the magazines in your library, most recently added first. Clicking on a cover image in the wall will open the magazine. [RSS] To the right of the buttons is a magazine selector This is used to search and add new magazine titles. Below you will find the usual status selector, toggles, rows per page and results filter as described in the homepage. [Active] Keep trying to find new issues of this magazine(s) and download new issues [Paused] Stop looking for new issues of this magazine. [Reset] Look for old issues (not just newer than latest issue) [Remove] remove selected magazine(s)from LazyLibrarian database. Does not delete local files. [Delete] delete magazine(s) selected from database and deletes local files as well. In the table, clicking on the magazine cover image shows a larger image. The Status column has either [Show] or [Open] clickable buttons. [Show] takes you to a page with all issues of that magazine, [Open] (when configured) allows you to open a magazine if you only have one issue downloaded.","title":"Menu"},{"location":"manage/","text":"Menu The menu bar has four buttons [Import Books] imports books from the \"Alternate Directory\" defined in config. It will copy/move books into the lazylibrarian library folder, adding authors as necessary. You can control the process using settings in Config- Processing . \"Keep original files\" will \"copy\" rather than \"move\" the files from the alternate folder. \"Only import one format\" will only copy the \"preferred\" format (the first one found, counting from the left, in Config- Importing- File Formats) \"Add Authors\" will allow authors to be added if they are not already in the library. If \"Include Other Books By New Authors\" is ticked, all the authors books will be listed in the library, not just the ones found in the alternate directory. \"New Book/Audiobook Status\" sets what status to give the authors other books. [Include Books] is similar, but it does not copy or move the books, just creates links to them in their \"Alternate Directory\" location. Lazylibrarian stores the full path to the books, so you can change Alternate Directory without losing the books. This allows you to link lazylibrarians database to multiple book locations. [WishLists] [Export CSV] exports a list of all books marked \"Wanted\" in your library. Note this is just eBooks. There is currently no equivalent functionality for AudioBooks or Magazines. [Import CSV] will re-import a lazylibrarian list, or a csv file from GoodReads or other sources. To be compatible, the CSV file needs to contain columns headed \"Title\" and \"Author\", and optionally a bookid and isbn. Any other columns are ignored. Books imported via a wishlist are added as \"Wanted\", and if their authors are not already in the library they are added using the same settings described for \"Import Books\" earlier in this page. Note this is also eBook only. [Calibre Sync] synchs your books to the calibre server as setup in Config- Calibre After this are toggles, rows per page and results filter as described in the homepage. In the table, clicking on the book cover image shows a larger image. Clicking the author name takes you to the authors page. Under the book title are buttons eg GoodReads LibraryThing Manual (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. See Pages: Manual . The delay column notes how long a delay for searching books so we arent constantly searching for every book (flooding indexers) Last date serched is the last time that book was searched for","title":"Manage"},{"location":"manage/#menu","text":"The menu bar has four buttons [Import Books] imports books from the \"Alternate Directory\" defined in config. It will copy/move books into the lazylibrarian library folder, adding authors as necessary. You can control the process using settings in Config- Processing . \"Keep original files\" will \"copy\" rather than \"move\" the files from the alternate folder. \"Only import one format\" will only copy the \"preferred\" format (the first one found, counting from the left, in Config- Importing- File Formats) \"Add Authors\" will allow authors to be added if they are not already in the library. If \"Include Other Books By New Authors\" is ticked, all the authors books will be listed in the library, not just the ones found in the alternate directory. \"New Book/Audiobook Status\" sets what status to give the authors other books. [Include Books] is similar, but it does not copy or move the books, just creates links to them in their \"Alternate Directory\" location. Lazylibrarian stores the full path to the books, so you can change Alternate Directory without losing the books. This allows you to link lazylibrarians database to multiple book locations. [WishLists] [Export CSV] exports a list of all books marked \"Wanted\" in your library. Note this is just eBooks. There is currently no equivalent functionality for AudioBooks or Magazines. [Import CSV] will re-import a lazylibrarian list, or a csv file from GoodReads or other sources. To be compatible, the CSV file needs to contain columns headed \"Title\" and \"Author\", and optionally a bookid and isbn. Any other columns are ignored. Books imported via a wishlist are added as \"Wanted\", and if their authors are not already in the library they are added using the same settings described for \"Import Books\" earlier in this page. Note this is also eBook only. [Calibre Sync] synchs your books to the calibre server as setup in Config- Calibre After this are toggles, rows per page and results filter as described in the homepage. In the table, clicking on the book cover image shows a larger image. Clicking the author name takes you to the authors page. Under the book title are buttons eg GoodReads LibraryThing Manual (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. See Pages: Manual . The delay column notes how long a delay for searching books so we arent constantly searching for every book (flooding indexers) Last date serched is the last time that book was searched for","title":"Menu"},{"location":"overview/","text":"The example pages are shown using the BookStrap interface in a desktop browser. The page layout will be different on mobile screens. Some options can be disabled in config, and not all options are available in the default interface. This shows the list of authors in your library. You can quickly get back to this page using the homepage button on the top left of all the other pages Below this is a menu bar with two buttons [Refresh] reloads all active author details from Goodreads/GoogleBooks. You can select whether to use Goodreads or GoogleBooks in config. [Show] switches the table between Active and Ignored authors. Active authors are monitored periodically for new books. Ignored authors are not monitored, and not shown in lists. Useful if the author only has one or two books you are interested in. On the right is the search box This is used to search Goodreads/GoogleBooks for authors or books. Type the book name, author name, or isbn into the white box and click the search icon to start searching. Search results appear in a new page. Below this is a list of column toggles Clicking each of these shows/hides the relevant column. Useful on small screens. LazyLibrarian remembers the show/hide state of columns while the program is running, but does not store them when you exit. On the left below this is a row selector where you can choose how many columns to show per page. There are checkboxes on the left of the author images, and a selector (not shown in screenshot) where you can change the status of the authors from Active/Wanted/Ignored/Paused/Remove/Delete See the wiki page on Status Choices for what the various statuses mean. Use the tickboxes on the left column to select which authors to change and then press Go On the right is a result filter . The filter contents are retained until you exit the program, or the 'x' clears the filter. You can filter on any text in any column of the table, eg author name, book title, series, dates, number of books, or book status. Below this is the table of results. This defaults to sorting on ascending author name. Clicking on a column header sorts the table on that column. Clicking the column header again toggles ascending/descending sort. It is not possible to sort on more than one column, and not all columns allow sorting, eg sort on image is not useful, but clicking on the author image will show a larger image. Clicking on an author name takes you to a page with author details and a list of their books. Clicking on a book title takes you to the book page on Goodreads/GoogleBooks. The basic page layout is the same for most lazylibrarian pages, so the rest of the page descriptions highlight the differences.","title":"Homepage/Authors"},{"location":"series/","text":"There are no buttons in the menu bar, just a searchbox described earlier. On the left is to select the status of series to show in the table. [All] show all series [Complete] Show series that all books have been downloaded. [Partial] Series only partially full. [Empty] Series with no books in them. [Skip] Series marked to skip [Wanted] Series marked as wanted [Active] Series active in the database [Ignored] Series marked as ingnored in database Toggles, row selector and result filter are the same as on previous pages. Use the tickboxes on the left column to select which series to change status for, and at the bottom of the page is another selector to set the new status Each series name can be clicked on to go to the SeriesMembers page which shows all books in that series. Each series has a progress bar showing how many books you have in the series. Ignored books are not included in the count.","title":"Series"},{"location":"series_detail/","text":"The table itself should be fairly self explanatory, follows the same layout and description as earlier pages. The menu bar has three buttons [Return to Author] goes back to the author page for this series. [Series List] goes back to the list of series by this author [Refresh Author] reloads the author details and list of their books from goodreads/googlebooks. In the table you can change the status of individual books. Under the book title are links eg \"GoodReads LibraryThing Manual\" (not all books have all options). Goodreads/GoogleBooks/Librarything take you to the relevant books page on the provider. Manual takes you to a page where you can edit the book details or perform manual searches. Clicking the title pops up a description of the book. See Pages: Manual .","title":"Series Detail"},{"location":"user-accounts/","text":"Bookstrap interface only. If you enable user accounts in config you can have multiple different users with limited access to lazylibrarian. When you first enable user accounts, your existing WebServer User and WebServer Password are used as the admin account. If you do not currently require webserver login, a default account will be set up with user and password \"admin\". The WebServer entries can be removed from config once user accounts are active. You will need to enter an admin email address which you can monitor for messages from users. This email address is used for registration requests, or if a user with limited access wants something they cannot access themselves. An email will be sent to this address with details of the request. User admin is accessed via a button in config. You can create users with default preset permissions of Admin, Friend, Guest, or use a custom value of your choice. Admin has full access, Friend has read/write access, Guest is read only. Friend can alter the status of books and authors (delete books, get books added to your library etc) but Guest can only download what's already there, and needs to ask admin to get missing books. Create some dummy users with friend/guest permissions to see how they work. When an admin adds a new user, the user receives an email giving their user name and password. The passwords are randomly generated or type your own, and all user names must be unique. Admin can change anyone's name/email/password. Non-admin can only change their own. Logins are session based using a browser cookie. A Logout button is on every page, or close your browser to log out. Custom permissions are a bitmask, used as follows... 1 Admin, access to config page 2 access to logs 4 access to history 8 access to manage page 16 access to magazines/issues/pastissues 32 access to audiobooks page 64 access to ebooks page 128 access to series/seriesmembers 256 can edit book or author details 512 can search goodreads/googlebooks for books/authors 1024 can change book status (wanted/skipped etc) 2048 can use background tasks (refresh authors/libraryscan/postprocess/searchtasks) * 4096 can download existing books/mags Default admin setting is everything enabled Default guest setting is ebooks/audiobooks/magazines/series/download Default friend is guest plus search/change_status Each user has their own \"sync to calibre\" lists where their bookmarks can be synced. Only admin can set these up as the column names need to be unique so one user cannot overwrite anothers bookmarks. Each user can also specify their preferred download type which is used in preference to the system default type (leftmost entry in the booktypes list). eg if the user has a kindle they can ask for mobi when they click \"Open\" even if the system default is epub. If their chosen default isn't available, or if they haven't set a preference, they get a popup offering other choices","title":"User accounts"}]}